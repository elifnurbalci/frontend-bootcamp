Pseudo Elemanlar ( ::before, ::after)
CSS Pseudo Elemanlar (::before ve ::after)

I. Pseudo Elemanlar Nedir?

CSS Pseudo Elemanlar, HTML içeriğine ekstra içerik eklemek için kullanılan ve herhangi bir HTML elemanının belirli bölümlerini hedeflemek için kullanılan CSS özellikleridir. Pseudo elemanlar, gerçek HTML içeriği oluşturulmadan önce belirtilen stil özellikleri ile içeriği biçimlendirmek için kullanılır. Bu sayede web tasarımında dekoratif öğeler, simgeler, süslü çizgiler ve içerikleri geliştirme gibi çeşitli amaçlar için kullanılabilirler.

II. ::before Pseudo Elemanı:

::before pseudo elemanı, seçilen HTML elemanının içeriğinin başına ekstra içerik eklemek için kullanılır. Bu pseudo elemanı, içeriğiyle etkileşime geçebilen içerikler oluşturmak için kullanışlıdır.

III. ::after Pseudo Elemanı:

::after pseudo elemanı, seçilen HTML elemanının içeriğinin sonuna ekstra içerik eklemek için kullanılır. Bu pseudo elemanı, özellikle süslü simgeler veya içeriği geliştirme amaçlı dekoratif öğeler eklemek için kullanılır.

IV. Kullanımı:

.selector::before {
    /* ::before pseudo elemanına uygulanacak stil özellikleri */
}
.selector::after {
    /* ::after pseudo elemanına uygulanacak stil özellikleri */
}
V. Örnekler:

Örnek 1: Daire İkon ile Başlık Süsleme

<!DOCTYPE html>
<html>
<head>
    <style>
        h2::before {
            content: "\2022"; /* Daire simgesi (Unicode karakteri) */
            margin-right: 10px; /* Simge ile başlık arasına boşluk bırakma */
            font-size: 18px;
        }
    </style>
</head>
<body>
    <h2>Web Tasarımı</h2>
    <h2>Front-end Geliştirme</h2>
</body>
</html>
Örnek 2: Özel Çizgi ile Menü Oluşturma

<!DOCTYPE html>
<html>
<head>
    <style>
        li::before {
            content: "";
            display: inline-block;
            width: 10px;
            height: 10px;
            background-color: #FF5733; /* Özel çizgi rengi */
            margin-right: 5px;
            vertical-align: middle;
        }

        ul {
            list-style: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <ul>
        <li>Ana Sayfa</li>
        <li>Hakkımızda</li>
        <li>Ürünler</li>
        <li>İletişim</li>
    </ul>
</body>
</html>
Örnek 3: Butonlar için Artan Sayılar

<!DOCTYPE html>
<html>
<head>
    <style>
        button::before {
            content: attr(data-number); /* data-number özelliğini pseudo elemanda kullanma */
            display: inline-block;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <button data-number="1">Düğme 1</button>
    <button data-number="2">Düğme 2</button>
    <button data-number="3">Düğme 3</button>
</body>
</html>
Örnek 4: Süslü Blok Düzenleme

Bu örnek, içeriği ::before ve ::after pseudo elemanlarıyla süsleyerek bloklar arasında görsel ayrım sağlar.

<!DOCTYPE html>
<html>
<head>
    <style>
        .block {
            position: relative;
            width: 200px;
            height: 100px;
            background-color: #007BFF;
            color: #FFFFFF;
            text-align: center;
            line-height: 100px;
            font-size: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .block::before,
        .block::after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.3); /* Yarı saydam arka plan */
            z-index: -1;
        }

        .block::before {
            transform: skewX(-45deg); /* 45 derece çevirme */
            transform-origin: top right; /* Dönüşün orijini */
        }

        .block::after {
            transform: skewX(45deg); /* -45 derece çevirme */
            transform-origin: top left; /* Dönüşün orijini */
        }
    </style>
</head>
<body>
    <div class="block">Süslü Blok 1</div>
    <div class="block">Süslü Blok 2</div>
    <div class="block">Süslü Blok 3</div>
</body>
</html>
Örnek 5: İçeriği Özel Karakterlerle Tamamlama

Bu örnek, bir başlıkta belirli bir mesajı ::after pseudo elemanı ile ekleyerek içeriği tamamlar.

<!DOCTYPE html>
<html>
<head>
    <style>
        h1::after {
            content: " 💡"; /* Işık ampulü simgesi (Unicode karakteri) */
            font-size: 24px;
        }
    </style>
</head>
<body>
    <h1>Web Tasarım</h1>
</body>
</html>
Örnek 6: Basit Ok Simgeleri

Bu örnek, liste öğelerinin başına ::before pseudo elemanı ile basit ok simgeleri ekler.

<!DOCTYPE html>
<html>
<head>
    <style>
        li {
            position: relative;
            padding-left: 20px;
            line-height: 24px;
        }

        li::before {
            content: "➤"; /* Ok simgesi (Unicode karakteri) */
            position: absolute;
            left: 0;
        }
    </style>
</head>
<body>
    <ul>
        <li>HTML</li>
        <li>CSS</li>
        <li>JavaScript</li>
    </ul>
</body>
</html>
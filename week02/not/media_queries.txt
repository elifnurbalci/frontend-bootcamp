Media Queries Kullanımı
CSS Media Queries Kullanımı

I. Media Queries Nedir?

CSS Media Queries, web sayfalarını farklı cihazlara ve ekran boyutlarına göre uyumlu hale getirmek için kullanılan bir CSS teknolojisidir. Media Queries, ekran boyutu, ekran oryantasyonu, cihaz türü ve diğer özelliklere göre farklı CSS kurallarını uygulamamıza olanak tanır. Böylece, responsive (duyarlı) tasarımlar oluşturabilir ve kullanıcı deneyimini geliştirebiliriz.

II. Media Queries Kullanımı

Media Queries, @media kuralı ile başlar ve içinde bir koşul veya medya özelliği belirtilir. Eğer belirtilen koşul veya medya özelliği gerçekleşirse, içerideki CSS kuralları uygulanır.

@media medya-tipi ve medya özelliği {
    /* Buraya medya koşulu gerçekleştiğinde uygulanacak CSS kuralları gelir */
}
III. Ekran Boyutuna Göre Duyarlı Tasarım

Media Queries, özellikle ekran boyutuna göre farklı düzenler oluşturmak için yaygın olarak kullanılır. Örneğin, geniş ekranlı masaüstü bilgisayarlarda farklı düzenlerden mobil cihazlarda daha optimize edilmiş bir düzene geçmek isteyebiliriz.

/* Geniş ekran */
@media (min-width: 1200px) {
    /* Bu kurallar sadece 1200 piksel ve daha geniş ekranlarda uygulanır */
}
/* Tablet ve dizüstü */
@media (min-width: 768px) and (max-width: 1199px) {
    /* Bu kurallar 768 piksel ile 1199 piksel arası ekranlarda uygulanır */
}
/* Mobil cihazlar */
@media (max-width: 767px) {
    /* Bu kurallar sadece 767 piksel ve daha küçük ekranlarda uygulanır */
}
IV. Diğer Medya Özellikleri

Ekran boyutu dışında, Media Queries ile aşağıdaki gibi diğer medya özelliklerini de kullanabiliriz:

- orientation: Ekranın dikey (portrait) veya yatay (landscape) konumunda olup olmadığını kontrol eder.

- device-width ve device-height: Cihazın ekran genişliği ve yüksekliğini kontrol eder.

- color: Cihazın renk derinliğini kontrol eder.

- aspect-ratio: Ekranın en boy oranını kontrol eder.

- hover: Kullanıcının cihazda fareyle gezinme yeteneğine sahip olup olmadığını kontrol eder.

- pointer: Kullanıcının cihazda bir işaretleme cihazına (örneğin fare) sahip olup olmadığını kontrol eder.

- print: Sayfanın yazdırılacağı durumu kontrol eder.

V. Örnek Kullanım

<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-size: 16px; /* Varsayılan font boyutu */
        }

        /* Mobil cihazlar için */
        @media (max-width: 767px) {
            body {
                font-size: 14px; /* Font boyutunu 14 piksel olarak ayarla */
            }
        }
    </style>
</head>
<body>
    <p>Merhaba, bu bir örnek paragraftır.</p>
</body>
</html>
Bu örnekte, Media Queries kullanarak mobil cihazlar için yazı fontunu 14 piksel olarak belirledik. Bu sayede, mobil cihazlarda metinler daha okunabilir olacak şekilde optimize edilir.

Örnek 2: Mobil, Tablet ve Masaüstü Duyarlı Tasarım

Bu örnek, farklı ekran boyutları için tasarımın nasıl değiştirileceğini gösterir.

<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-size: 16px; /* Varsayılan font boyutu */
        }

        /* Mobil cihazlar için */
        @media (max-width: 767px) {
            body {
                font-size: 14px; /* Font boyutunu 14 piksel olarak ayarla */
            }

            .container {
                width: 90%; /* İçerik alanını mobil cihazlara göre daralt */
            }

            /* Diğer mobil özel kurallar */
        }

        /* Tablet ve dizüstü için */
        @media (min-width: 768px) and (max-width: 1199px) {
            body {
                font-size: 16px; /* Font boyutunu 16 piksel olarak ayarla */
            }

            .container {
                width: 70%; /* İçerik alanını tablet ve dizüstü cihazlara göre daralt */
            }

            /* Diğer tablet ve dizüstü özel kurallar */
        }

        /* Masaüstü ve geniş ekran için */
        @media (min-width: 1200px) {
            body {
                font-size: 18px; /* Font boyutunu 18 piksel olarak ayarla */
            }

            .container {
                width: 50%; /* İçerik alanını masaüstü ve geniş ekranlara göre daralt */
            }

            /* Diğer masaüstü ve geniş ekran özel kurallar */
        }

        .container {
            margin: 0 auto; /* İçerik alanını yatayda ortala */
            padding: 20px;
            background-color: #E3E3E3;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Merhaba, bu bir örnek başlıktır</h1>
        <p>Ve bu bir örnek paragraftır.</p>
    </div>
</body>
</html>    
Örnek 3: Yatay ve Dikey Oryantasyona Göre Duyarlı Tasarım

Bu örnek, ekranın dikey (portrait) veya yatay (landscape) oryantasyonuna göre düzenin nasıl değiştirileceğini gösterir.

<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-size: 16px; /* Varsayılan font boyutu */
        }

        /* Dikey (Portrait) oryantasyon için */
        @media (orientation: portrait) {
            .container {
                flex-direction: column; /* Elemanları dikey olarak düzenle */
            }

            /* Diğer dikey oryantasyon özel kurallar */
        }

        /* Yatay (Landscape) oryantasyon için */
        @media (orientation: landscape) {
            .container {
                flex-direction: row; /* Elemanları yatay olarak düzenle */
            }

            /* Diğer yatay oryantasyon özel kurallar */
        }

        .container {
            display: flex;
            justify-content: center; /* Elemanları yatayda ortala */
            align-items: center; /* Elemanları dikeyde ortala */
            width: 100%;
            height: 100vh;
            background-color: #E3E3E3;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Merhaba, bu bir örnek başlıktır</h1>
        <p>Ve bu bir örnek paragraftır.</p>
    </div>
</body>
</html>

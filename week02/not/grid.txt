Grid Layout
CSS Grid Layout

I. Grid Layout Nedir?

CSS Grid Layout, web sayfalarını düzenlemek ve içerikleri düzenli bir şekilde hizalamak için kullanılan bir CSS düzen modelidir. "Grid" olarak da bilinen bu yöntem, sayfayı satır ve sütunlar halinde böler ve içeriği bu satır ve sütunlara yerleştirir. Grid Layout, kompleks düzenler oluşturmak için Flexbox'tan daha fazla kontrol ve esneklik sağlar.

II. Grid Container ve Grid Items

Grid Layout yapısında iki önemli terim vardır: "Grid Container" ve "Grid Items".

- Grid Container: Grid Container, içerisindeki elemanları grid yapısında düzenlemek için kullanılan bir HTML elemanıdır. Bir elemanı Grid Container yapmak için, onun üzerine display: grid; veya display: inline-grid; özelliğini uygulamamız gerekir.

- Grid Items: Grid Items, Grid Container içindeki elemanlardır ve bu elemanlar Grid Container tarafından yönetilen grid yapısında hizalanır. Grid Container'ın doğrudan alt öğeleri Grid Items olarak kabul edilir.

III. Grid Container İçin Özellikler

Bir Grid Container'ı oluşturmak için kullanılan temel özellikler şunlardır:

- display: grid; veya display: inline-grid;: Bir HTML elemanını Grid Container haline getirmek için kullanılır.

- grid-template-rows: Grid Container'daki satırların boyutunu ve yapısını belirler.

- grid-template-columns: Grid Container'daki sütunların boyutunu ve yapısını belirler.

- grid-template-areas: Grid Container'daki alanları (bölgeleri) adlandırmak ve yerleştirmek için kullanılır.

- grid-template: grid-template-rows, grid-template-columns, ve grid-template-areas özelliklerini tek bir özellik olarak belirlemek için kullanılır.

- grid-gap veya gap: Grid Container içindeki Grid Items'lar arasında boşluk belirler.

- justify-items: Grid Items'ları yatayda (sütunlar arasında) nasıl hizalayacağını belirler.

- align-items: Grid Items'ları dikeyde (satırlar arasında) nasıl hizalayacağını belirler.

- place-items: justify-items ve align-items özelliklerini tek bir özellik olarak belirlemek için kullanılır.

- justify-content: Grid Items'ları yatayda (sütunlar arasında) nasıl hizalayacağını belirler.

- align-content: Grid Items'ları dikeyde (satırlar arasında) nasıl hizalayacağını belirler.

IV. Grid Items İçin Özellikler

Bir Grid Item'ı oluşturmak için kullanılan temel özellikler şunlardır:

- grid-row-start, grid-row-end, grid-column-start, grid-column-end: Bir Grid Item'ın başlangıç ve bitiş satır ve sütunlarını belirler.

- grid-row ve grid-column: grid-row-start, grid-row-end, grid-column-start, grid-column-end özelliklerini tek bir özellik olarak belirlemek için kullanılır.

- grid-area: Grid Item'ın Grid Container içindeki belirli bir alanda (bölgede) yer almasını sağlar.

- justify-self: Bir Grid Item'ı yatayda (sütunlar arasında) nasıl hizalayacağını belirler.

- align-self: Bir Grid Item'ı dikeyde (satırlar arasında) nasıl hizalayacağını belirler.

- place-self: justify-self ve align-self özelliklerini tek bir özellik olarak belirlemek için kullanılır.

V. Örnekler

<!DOCTYPE html>
<html>
<head>
    <style>
       

 .grid-container {
            display: grid;
            grid-template-columns: repeat(3, 100px); /* 3 sütun, her biri 100 piksel genişlikte */
            grid-gap: 10px; /* Grid Items'lar arasında 10 piksel boşluk */
            justify-content: center; /* Sütunları ortala */
            align-content: center; /* Satırları ortala */
            height: 300px;
            background-color: #E3E3E3;
        }

        .grid-item {
            background-color: #007BFF;
            color: #FFFFFF;
            text-align: center;
            line-height: 100px;
            font-size: 16px;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="grid-container">
        <div class="grid-item">1</div>
        <div class="grid-item">2</div>
        <div class="grid-item">3</div>
        <div class="grid-item">4</div>
        <div class="grid-item">5</div>
        <div class="grid-item">6</div>
    </div>
</body>
</html> 
Daha detaylı bir örnek verecek olursak:

<!DOCTYPE html>
<html>
<head>
    <style>
        .grid-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr); /* 3 eşit genişlikte sütun */
            grid-template-rows: repeat(3, 100px); /* 3 eşit yükseklikte satır */
            gap: 10px; /* Grid Items'lar arasında 10 piksel boşluk */
            justify-items: center; /* Yatayda elemanları ortala */
            align-items: center; /* Dikeyde elemanları ortala */
            height: 300px;
            background-color: #E3E3E3;
        }

        .grid-item {
            background-color: #007BFF;
            color: #FFFFFF;
            text-align: center;
            line-height: 100px;
            font-size: 16px;
            border-radius: 5px;
        }

        .grid-item-1 {
            grid-row: 1 / 2; /* 1. satırda başlangıç, 2. satırda bitiş */
            grid-column: 1 / 3; /* 1. sütunda başlangıç, 3. sütunda bitiş */
        }

        .grid-item-2 {
            grid-row: 2 / 3; /* 2. satırda başlangıç, 3. satırda bitiş */
            grid-column: 2 / 4; /* 2. sütunda başlangıç, 4. sütunda bitiş */
        }

        .grid-item-3 {
            grid-row: 3 / 4; /* 3. satırda başlangıç, 4. satırda bitiş */
            grid-column: 1 / 2; /* 1. sütunda başlangıç, 2. sütunda bitiş */
        }

        .grid-item-4 {
            grid-row: 3 / 4; /* 3. satırda başlangıç, 4. satırda bitiş */
            grid-column: 2 / 4; /* 2. sütunda başlangıç, 4. sütunda bitiş */
        }

        .grid-item-5 {
            grid-row: 2 / 4; /* 2. satırda başlangıç, 4. satırda bitiş */
            grid-column: 1 / 2; /* 1. sütunda başlangıç, 2. sütunda bitiş */
        }
    </style>
</head>
<body>
    <div class="grid-container">
        <div class="grid-item grid-item-1">1</div>
        <div class="grid-item grid-item-2">2</div>
        <div class="grid-item grid-item-3">3</div>
        <div class="grid-item grid-item-4">4</div>
        <div class="grid-item grid-item-5">5</div>
    </div>
</body>
</html>
Bu örnekte, grid-template-columns ve grid-template-rows özellikleri ile Grid Container'ın satır ve sütun yapısını oluşturduk. gap özelliği ile Grid Items'lar arasına boşluk ekledik. justify-items ve align-items özellikleri ile Grid Items'ları yatayda ve dikeyde ortaladık.

Ayrıca, Grid Items'ları grid-row ve grid-column özellikleri ile belirli satır ve sütunlarda konumlandırdık. Her bir Grid Item'ın kendi özel grid hücresi var ve bu hücreleri grid-row ve grid-column özellikleri ile belirledik.